(program
  (let
    (nonrec
    )
    (datatypebind
      (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
    )
    (let
      (rec
      )
      (datatypebind
        (datatype
          (tyvardecl List (fun (type) (type)))
          (tyvardecl a (type))
          Nil_match
          (vardecl Nil [List a]) (vardecl Cons (fun a (fun [List a] [List a])))
        )
      )
      (let
        (rec
        )
        (termbind
          (vardecl
            mapDirect
            (all a (type) (all b (type) (fun (fun a b) (fun [List a] [List b]))))
          )
          (abs
            a
            (type)
            (abs
              b
              (type)
              (lam
                f
                (fun a b)
                (lam
                  l
                  [List a]
                  [
                    [
                      [
                        { [ { Nil_match a } l ] (fun Unit [List b]) }
                        (lam thunk Unit { Nil b })
                      ]
                      (lam
                        x
                        a
                        (lam
                          xs
                          [List a]
                          (lam
                            thunk
                            Unit
                            [
                              [ { Cons b } [ f x ] ]
                              [ [ { { mapDirect a } b } f ] xs ]
                            ]
                          )
                        )
                      )
                    ]
                    Unit
                  ]
                )
              )
            )
          )
        )
        (let
          (nonrec)
          (termbind
            (vardecl
              addInteger (fun (con integer) (fun (con integer) (con integer)))
            )
            (builtin addInteger)
          )
          [
            [
              { { mapDirect (con integer) } (con integer) }
              [ addInteger (con 1) ]
            ]
            [
              [ { Cons (con integer) } (con 0) ]
              [ [ { Cons (con integer) } (con 1) ] { Nil (con integer) } ]
            ]
          ]
        )
      )
    )
  )
)